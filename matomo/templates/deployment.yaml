apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matomo.fullname" . }}
  labels: {{- include "matomo.labels" . | nindent 4 }}
    app.kubernetes.io/component: app
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
{{- if eq (int .Values.replicaCount) 1 }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
{{- end }}
  selector:
    matchLabels: {{- include "matomo.selector" . | nindent 6 }}
      app.kubernetes.io/component: app
  template:
    metadata:
      labels: {{- include "matomo.selector" . | nindent 8 }}
        app.kubernetes.io/component: app
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum | trunc 63 }}
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9913"
      {{- end }}
    spec:
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
    {{- end }}
      containers:
        - name: {{ include "matomo.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MATOMO_GENERAL_ENABLE_TRUSTED_HOST_CHECK
              value: "0"
          {{- if gt (int .Values.replicaCount) 1 }}
            - name: MATOMO_GENERAL_MULTI_SERVER_ENVIRONMENT
              value: "1"
          {{- end }}
            - name: MATOMO_DATABASE_HOST
              value: {{ include "matomo.databaseHost" . | quote }}
            - name: MATOMO_DATABASE_ADAPTER
              value: {{ .Values.database.adapter | quote }}
            - name: MATOMO_DATABASE_TABLES_PREFIX
              value: {{ .Values.database.tables_prefix | quote }}
            - name: MATOMO_DATABASE_DBNAME
              value: {{ .Values.database.dbname | quote }}
            - name: MATOMO_GENERAL_SALT
              value: {{ required "`.Values.salt` is not set." .Values.salt | quote }}
          {{- range $key, $value := .Values.extraEnvs }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "matomo.fullname" . }}-envs
          ports:
            - name: fpm
              containerPort: 9000
              protocol: TCP
        {{- with .Values.lifecycle }}
          lifecycle:
            {{ toYaml . | indent 12 | trim }}
        {{- end }}
        {{- with .Values.resources }}
          resources:
            {{ toYaml . | indent 12 | trim}}
        {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
              subPath: {{ .Values.persistence.subPath }}
            - name: html-files
              mountPath: /var/www/html
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag}}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: matomo.conf
            - name: html-files
              mountPath: /var/www/html
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "matomo.fullname" . }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: config
          configMap:
            name: {{ include "matomo.fullname" . }}
        - name: html-files
          emptyDir: {}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 | trim }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | indent 8 | trim }}
    {{- end }}
      affinity:
      {{- with .Values.affinity }}
        {{ toYaml . | indent 8 | trim }}
      {{- end }}
      {{- if eq .Values.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels: {{- include "matomo.selector" . | nindent 18 }}
                  app.kubernetes.io/component: app

      {{- else }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels: {{- include "matomo.selector" . | nindent 20 }}
                    app.kubernetes.io/component: app

      {{- end }}
