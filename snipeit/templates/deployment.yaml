apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "snipeit.fullname" . }}
  labels:
    {{ include "snipeit.labels" . | indent 4 | trim }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
{{- with .Values.deploymentStrategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
  selector:
    matchLabels:
      {{ include "snipeit.selector" . | indent 6 | trim }}
  template:
    metadata:
      labels:
        {{ include "snipeit.selector" . | indent 8 | trim }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    {{- if .Values.extraAnnotations }}
      {{- range $key, $value := .Values.extraAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    {{- end }}
    spec:
      initContainers:
        - name: config-data
          image: busybox
          command: ["sh", "-c", "chown -R 100:101 {{ .Values.persistence.sessions.mountPath }}"]
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.sessions.mountPath }}
              subPath: {{ .Values.persistence.sessions.subPath }}
      containers:
        - name: {{ include "snipeit.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: APP_ENV
              value: {{ .Values.config.snipeit.env | quote }}
            - name: APP_DEBUG
              value: {{ .Values.config.snipeit.debug | quote }}
            - name: APP_URL
              value: {{ .Values.config.snipeit.url | quote }}
            - name: APP_TIMEZONE
              value: {{ .Values.config.snipeit.timezone | quote }}
            - name: APP_LOCALE
              value: {{ .Values.config.snipeit.locale | quote }}

          envFrom:
            - secretRef:
                name: {{ include "snipeit.fullname" . }}
            {{ if .Values.config.externalSecrets }}
            - secretRef:
                name: {{ .Values.config.externalSecrets }}
            {{ end }}

          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            periodSeconds: 15
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            periodSeconds: 15
            timeoutSeconds: 3
        {{- with .Values.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
        {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.www.mountPath }}
              subPath: {{ .Values.persistence.www.subPath }}
            - name: data
              mountPath: {{ .Values.persistence.sessions.mountPath }}
              subPath: {{ .Values.persistence.sessions.subPath }}
            {{- if .Values.extraVolumeMounts }}
              {{- toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "snipeit.fullname" . }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.extraVolumes }}
          {{- toYaml .Values.extraVolumes | nindent 8}}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 | trim }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | indent 8 | trim }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | indent 8 | trim }}
    {{- end }}
